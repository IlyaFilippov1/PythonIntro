# На столе лежат n монеток. Некоторые из них
# лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть,
# чтобы все монетки были повернуты вверх одной и той же стороной.
# В первой строке входного файла INPUT.TXT записано натуральное
# число N (1 ≤ N ≤ 100) – число монеток.
# В каждой из последующих N строк содержится одно целое число –
# 1 если монетка лежит решкой вверх и 0 если вверх гербом.

""" from random import randrange

a = [randrange(0, 2) for i in range(1, 101)]
print(' '.join([str(i) for i in a]))
coin_tail = 0
coin_head = 0
for i in a:
    if i == 0:
        coin_head += 1
    else:
        coin_tail += 1
if coin_head >= coin_tail:
    print(coin_tail)
else:
    print(coin_head) """

# второе решение получше))))
""" from random import randrange

n = int(input('Введите количество монеток: '))
k = 0
for i in range(n):
    m = randrange(0, 2)
    if m == 1:
        k += 1
    print(m)
print(k if k < n/2 else n - k) """

# Требуется посчитать сумму целых чисел, расположенных между числами 1 и N включительно.
# В единственной строке входного файла INPUT.TXT записано единственное целое число N, не
# превышающее по абсолютной величине 10^4.
# В единственную строку выходного файла OUTPUT.TXT нужно вывести одно целое число — сумму чисел,
# расположенных между 1 и N включительно.

""" n = int(input('Введите число: ')) # на сайте не проходит тест 3
sum = n
if n >= 0 and n < 10 ** 4:
    for i in range(1, n):
        sum = (n - i) + sum
if n < 0 and n < 10 ** 4:
    for i in range(1, -n):
        sum = (n + i) + sum
print(sum) """


# Требуется найти наименьший натуральный делитель целого числа N, отличный от 1
# Входной файл INPUT.TXT содержит целое число N (1 < N ≤ 106).
# В выходной файл OUTPUT.TXT выведите ответ на задачу.

""" n = int(input('Введите число: '))
i = 2
while n % i != 0:
    i += 1
print(i) """

# Петя впервые пришел на урок физкультуры в новой школе. Перед началом урока ученики
# выстраиваются по росту, в порядке невозрастания. Напишите программу, которая
# определит на какое место в шеренге Пете нужно встать, чтобы не нарушить традицию,
# если заранее известен рост каждого ученика и эти данные уже расположены по
# невозрастанию (то есть каждое следующее число не больше предыдущего).
# Если в классе есть несколько учеников с таким же ростом, как у Пети,
# то программа должна расположить его после них.
# Первая строка входного файла INPUT.TXT содержит натуральное число N (N ≤ 100) – количество учеников (не считая Петю).
# Во второй строке записаны N натуральных чисел Ai (Ai ≤ 200) – рост учеников в сантиметрах в порядке невозрастания.
# Третья строка содержит единственное натуральное число X (X ≤ 200) – рост Пети


""" from random import randrange
n = int(input('Количество учеников: '))
a = [randrange(150, 201) for i in range(n)]
x = int(input('Введите рост Пети: '))
a.sort()
a.reverse()
print(a)
for i in range(len(a)):
    if a[i] < x:
        print(i+1)
        exit()
print(len(a) + 1) """


# сбор черники 

n = int(input('Введите колическво кустов: '))
arr = [int(i) for i in input().split()]

# [1, 2, 3, 4]
# -4 -3 -2 -1
arr_count = list()
for i in range(1, len(arr) - 1):
    arr_count.append(arr[i - 1] + arr[i] + arr[i + 1])
arr_count.append(arr[-2] + arr[-1] + arr[0])
print(max(arr_count))